# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Linux test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install --upgrade black flake8 freezegun pytest pytest-cov requests_mock
      python -m pip install  -e .
    displayName: 'Install dependencies'

  - script: |
      pytest --cov pypistats --junitxml=junit/test-results.xml
    displayName: 'Unit tests'

  - script: |
      python -m pip install --upgrade codecov
      codecov --name "Python $(python.version)" --build $(Build.BuildNumber)
    condition: succeeded()
    displayName: 'Upload to Codecov'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Windows test'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install --upgrade black flake8 freezegun pytest pytest-cov requests_mock
      python -m pip install  -e .
    displayName: 'Install dependencies'

  - script: |
      pytest --cov pypistats --junitxml=junit/test-results.xml
    displayName: 'Unit tests'

  - script: |
      python -m pip install --upgrade codecov
      codecov --name "Python $(python.version)" --build $(Build.BuildNumber)
    condition: succeeded()
    displayName: 'Upload to Codecov'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish'
  dependsOn:
  - 'Linux test'
  - 'Windows test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: python setup.py sdist
    displayName: 'Build sdist'
